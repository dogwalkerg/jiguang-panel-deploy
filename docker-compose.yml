version: '3.7'
services:
  worker:
    image: ghcr.io/dogwalkerg/jiguanpanel/jiguanpanel-backend:latest
    restart: always
    command: bash worker.sh
    environment:
      TZ: 'Asia/Shanghai'
      ENABLE_SENTRY: 'yes'
      DATABASE_URL: 'postgresql://sjkname:AuroraAdminPane3222@postgres:5432/sjkname'
      ASYNC_DATABASE_URL: 'postgresql+asyncpg://sjkname:AuroraAdminPane3222@postgres:5432/sjkname'
      TRAFFIC_INTERVAL_SECONDS: 600
      DDNS_INTERVAL_SECONDS: 120
    volumes:
      # - $HOME/.ssh/id_rsa:/app/ansible/env/ssh_key
      # - $HOME/.ssh/id_ed25519:/app/ansible/env/ssh_key
      - app-data:/app/ansible/priv_data_dirs
    depends_on:
      - redis
    networks:
      - sjkname
      - worker

  backend:
    image: ghcr.io/dogwalkerg/jiguanpanel/jiguanpanel-backend:latest
    restart: always
    command: bash -c "while !</dev/tcp/postgres/5432; do sleep 1; done; alembic upgrade heads && python app/main.py"
    environment:
      TZ: 'Asia/Shanghai'
      PYTHONPATH: .
      DATABASE_URL: 'postgresql://sjkname:AuroraAdminPane3222@postgres:5432/sjkname'
      ASYNC_DATABASE_URL: 'postgresql+asyncpg://sjkname:AuroraAdminPane3222@postgres:5432/sjkname'
      SECREY_KEY: 'AuroraAdminPane3222'
    volumes:
      - app-data:/app/ansible/priv_data_dirs
    depends_on:
      - postgres
      - redis
    networks:
      - sjkname

  nginx:
    image: ghcr.io/dogwalkerg/jiguanpanel/jiguanpanel-frontend:latest
    restart: always
    environment:
      TZ: 'Asia/Shanghai'
    ports:
      - 8321:80
    depends_on:
      - backend
    networks:
      - sjkname

  redis:
    image: redis
    restart: always
    environment:
      TZ: 'Asia/Shanghai'
    networks:
      - sjkname

  postgres:
    image: postgres:13-alpine
    restart: always
    environment:
      TZ: 'Asia/Shanghai'
      POSTGRES_USER: golo123
      POSTGRES_PASSWORD: golo123
      POSTGRES_DB: sjkname
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - sjkname


volumes:
  db-data:
  app-data:

networks:
  worker:
    enable_ipv6: false
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "true"
    ipam:
      driver: default
      config:
        - subnet: fd00:ea23:9c80:4a54:e242:5f97::/96
          gateway: fd00:ea23:9c80:4a54:e242:5f97::1
  sjkname:
    driver: bridge
